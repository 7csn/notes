

1. 客户端 —> 服务端：ssl版本、加密算法类型、随机数、通讯信息。

2. 服务端 —> 客户端：ssl版本、加密算法类型、随机数、通讯信息、证书。

3. 客户端验证服务器合法性：证书是否过期、发行证书的 CA 是否可靠、证书中的公钥能否解开证书的“发行者的数字签名”、证书上的域名是否匹配服务器实际域名。不合法，则断开通讯。

4. 客户端 —> 服务端：“预主密码”（服务器证书中的公钥加密客户端随机生成的用于通讯的“对称密码”），随机数和证书（若服务器要求客户的身份认证，握手过程可选）。

5. 服务端验证客户端合法性（若握手过程，服务端要求验证），不合法，则断开通讯；服务器私钥解开加密的“预主密码”，执行一些步骤生成通讯密码（客户端同样方法生成相同的主通讯密码）。

6. 服务端和客户端用相同的主密码即“通话密码”，一个对称密钥用于 SSL 协议的安全数据通讯的加解密通讯，同时在 SSL 通讯过程中还要完成数据通讯的完整性，防止数据通讯中的任何变化。

7. 客户端 —> 服务端：指明后续数据通讯将使用“通话密码”为对称密钥，并通知服务器客户端的握手过程结束。

8. 服务端 —> 客户端：指明后续数据通讯将使用“通话密码”为对称密钥，并通知客户端服务器的握手过程结束。

9. SSL 握手部分结束，SSL 安全通道的数据通讯开始，客户端和服务器开始使用对称密钥进行数据通讯，同时进行通讯完整性的检验。


